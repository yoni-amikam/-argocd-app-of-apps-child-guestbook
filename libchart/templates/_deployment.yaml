{{- define "libchart.deployment" -}}
{{- $fullName := include "libchart.fullname" . }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ $fullName }}"
  labels:
    {{- include "libchart.labels" . | nindent 4 }}
    
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  {{- with .Values.strategy }}
  strategy:
    type: {{ .type }}
    {{- if eq .type "RollingUpdate" }}
    rollingUpdate:
      maxUnavailable: {{ .maxUnavailable }}
      maxSurge: {{ .maxSurge }}
    {{- end }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "libchart.selectorLabels" . | nindent 6 }}
      
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "libchart.selectorLabels" . | nindent 8 }}
        {{- if eq .Values.image.pullPolicy "Always" }}
        date: "{{ now | unixEpoch }}"
        {{- end }}
        
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "libchart.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- if .Values.image.command }}
          {{- with .Values.image.command }}
          command: 
          {{- toYaml . | nindent 12 }}
          {{- end }}
          args:
          {{- with .Values.image.args }}
          {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- end }}
          {{- if .Values.image.volumeMounts }}
          {{- with .Values.image.volumeMounts }}
          volumeMounts:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- end }}
          env:     
            {{- with .Values.image.env }}
              {{- if  .chartValues -}}
              {{- range $key, $value := .chartValues }}
              - name: {{ $key }}
                value: {{ $value | quote }}
              {{- end }}
              {{- end }}
              {{- range .secrets }}
              - name: {{ .name }}
                valueFrom:
                  secretKeyRef:
                    name: {{ .valueFrom.secretKeyRef.name }}
                    key: {{ .valueFrom.secretKeyRef.key | quote }}
              {{- end }}
              {{- range .parametersStore }}
              - name: {{ .name }}
                valueFrom:
                  configMapKeyRef:
                    name: {{ .valueFrom.configMapKeyRef.name }}
                    key: {{ .valueFrom.configMapKeyRef.key | quote }}
              {{- end }}
            {{- end }}
              - name: THIS_POD_NAMESPACE
                valueFrom:
                  fieldRef:
                    fieldPath: metadata.namespace
              - name: DD_TAGS
                valueFrom: 
                  configMapKeyRef:
                    name: charts-values
                    key: DD_TAGS
              - name: DD_ENV
                valueFrom: 
                  configMapKeyRef:
                    name: charts-values
                    key: DD_ENV
              - name: DD_ENV_TAG
                valueFrom: 
                  configMapKeyRef:
                    name: charts-values
                    key: DD_ENV  
          
          {{- if .Values.service }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          {{- if .Values.additionalPorts }}
          {{- range .Values.additionalPorts }}
            - name: {{ .name }}
              containerPort: {{ .port }}
              protocol: TCP
          {{- end }}
          {{- end }}
          {{- end }}
          {{- with .Values.healthCheck }}
          {{- with .livenessProbe }}
          livenessProbe:
            initialDelaySeconds: {{ .initialDelaySeconds }}
            periodSeconds: {{ .periodSeconds }}
            successThreshold: 1
            timeoutSeconds: {{ .timeoutSeconds }}
          {{- end }}
            {{- if .command }}
            exec:
              command:
                - "sh"
                - "-c"
                - {{ .command }}
            {{- else }}
            httpGet:
              path: /health
              port: http
            {{- end }}
          {{- with .readinessProbe }}
          readinessProbe:
            initialDelaySeconds: {{ .initialDelaySeconds }}
            periodSeconds: {{ .periodSeconds }}
            successThreshold: 2
            timeoutSeconds: {{ .timeoutSeconds }}
          {{- end }}
            {{- if .command }}
            exec:
              command:
                - "sh"
                - "-c"
                - {{ .command }}
            {{- else }}
            httpGet:
              path: /health
              port: http
            {{- end }}
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- if .Values.volumes }}
      {{- with .Values.volumes }}
      volumes:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end -}}